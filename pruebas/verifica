#!/usr/bin/gawk -E

@include "../src/ecma-404.awk"

BEGIN {
    LOG = "./resultado_pruebas.log";
    DFP = ".";
    
    cad_json01[0];
    cad_json02[0];
    json01 = "";
    json02 = "";
    
    fdpj = "";
    
    system("ls "DFP"/*.json > /tmp/vrfc.tmp")
#    print "ls "DFP"/*.json" |& "sh";
#    while (("sh" |& getline v) > 0)
    while ((getline fdpj < "/tmp/vrfc.tmp") > 0) {
        printf("Probando \042"fdpj"\042... ")
        plog("Iniciando batería de pruebas con \042"fdpj"\042...\n",
                1, "INFO");
        
        cad_json01[0] = "";
        while ((getline linea < fdpj) > 0)
            cad_json01[0] = cad_json01[0] linea;
        close(fdpj);
        
        json01 = cad_json01[0];
        
        plog("Convertir JSON_01 en lista_01... ", 1, "INFO");
        jsonLstm(cad_json01, lista01);
        plog("Hecho.\n");

        plog("Convertir lista_01 en JSON_02... ", 1, "INFO");
        lstmJson(lista01, cad_json02);
        plog("Hecho.\n");
        
        json02 = cad_json02[0];
        
        plog("Convertir JSON_02 en lista_02... ", 1, "INFO");
        jsonLstm(cad_json02, lista02);
        plog("Hecho.\n");
        
    #    print json02; exit 0;

    #    pinta_elmtos(lista01); 
    #    print;
    #    pinta_elmtos(lista02);
    #    exit 0;
        
        if (compara(lista01, lista02) == 0) {
            plog("¡Bien! \042"fdpj"\042 ha superado todas las pruebas.\n", 
                    1, "INFO");
            print("Hecho.")
        } else {
            print("Error (ver fichero de bitácora para más detalle).");
        }
    }
    close("/tmp/vrfc.tmp");
    exit 0;
}

function compara(lista01, lista02)
{
    for (i in lista01) {
        for (j in lista01[i]) {
            for (k in lista01[i][j]) {
                if (!(i in lista02)) {
                    plog("Falta "i" en lista_02.", 1, "ERROR");
                    return -1;
                }
                if (!(j in lista02[i])) {
                    plog("Falta "j" en lista_02["i"].", 1, "ERROR");
                    return -1;
                }
                if (!(k in lista02[i][j])) {
                    plog("Falta "k" en lista_02["i"]["j"].", 1, "ERROR");
                    return -1;
                }
                plog("Compara ["i"]["j"]["k"] en listas 01 y 02... ", 
                        1, "INFO");
                if (lista01[i][j][k] != lista02[i][j][k]) {
                    plog("Error.\n");
                    return -1;
                }
                plog("Hecho.\n");
            }
        }
    }
    return 0;
}

function plog(txt, stm, nvl)
{
    if (length(stm) == 0)
        stm = "";
    else
        stm = fstm();
    printf (((stm != "" && length(nvl) > 0) ? "%s %s - " : "") txt,
                stm, nvl) >> LOG;
}

function fstm(frmt)
{
    if (length(frmt) == 0)
        frmt = "%d/%m/%Y %H:%M:%S";
    return strftime(frmt);
}
