#!/usr/bin/gawk -E

# Autor: Ulpiano Tur de Vargas <ulpiano.tur.devargas@gmail.com>
#
# Este programa es software libre; puedes distribuirlo y/o
# modificarlo bajo los términos de la Licencia Pública General de GNU
# según la publicó la Fundación del Software Libre; ya sea la versión 3, o
# (a su elección) una versión superior.
#
# Este programa se distribuye con la esperanza de que sea útil,
# pero SIN NINGUNA GARANTIA; ni siquiera la garantía implícita de
# COMERCIABILIDAD o APTITUD PARA UN PROPÓSITO DETERMINADO. Vea la
# Licencia Pública General de GNU para más detalles.
#
# Deberías haber recibido una copia de la Licencia Pública General
# de GNU junto con este software; mira el fichero LICENSE. Si
# no, mira <https://www.gnu.org/licenses/>.

# Author: Ulpiano Tur de Vargas <ulpiano.tur.devargas@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this software; see the file LICENSE. If
# not, see <https://www.gnu.org/licenses/>.

BEGIN {
    dfjson = "./djson/";
    dfprbs = "./dprbs/";
    dftmps = "./tmp/";
    lstjsn = dftmps "lstjsn.tmp";
    lstpbs = dftmps "lstpbs.tmp";
    fdpj = "";
    fdpp = "";
    nfpj = "";
    nfpp = "";

    codSal = 0;

    system("mkdir -p " dftmps);
    system("echo $(pwd) > " dftmps "pwd.tmp");
    system("ls " dfjson "*.json > "   lstjsn);
    system("ls " dfprbs "prueba_* > " lstpbs);
    
    while ((getline fdpp < lstpbs) > 0) {
        split(fdpp, n, "/");
        nfpp = n[length(n)];

        printf("\n>>> Empezar \042" nfpp "\042 <<<\n");
        while ((getline fdpj < lstjsn) > 0) {
            split(fdpj, n, "/");
            nfpj = n[length(n)];
            printf("Hacer en \042" nfpj "\042... ");

            codSal = system("cd " dfprbs "; ./" nfpp " ." fdpj);
            system("cd $(cat " dftmps "pwd.tmp)");

            if (codSal != 0 && codSal != 1) {
                print("Error de ejecución. Abortar.");
                exit 1;
            }
            if (codSal)
                print("Error (ver bitácora para más detalle).");
            else
                print("Hecho.");
        }
        close(lstjsn);
    }
    close(lstpbs);
    system("rm -f " lstpbs);
    system("rm -f " lstjsn);
    exit 0;
}
