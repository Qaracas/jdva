#!/usr/bin/gawk -E

# Autor: Ulpiano Tur de Vargas <ulpiano.tur.devargas@gmail.com>
#
# Este programa es software libre; puedes distribuirlo y/o
# modificarlo bajo los términos de la Licencia Pública General de GNU
# según la publicó la Fundación del Software Libre; ya sea la versión 3, o
# (a su elección) una versión superior.
#
# Este programa se distribuye con la esperanza de que sea útil,
# pero SIN NINGUNA GARANTIA; ni siquiera la garantía implícita de
# COMERCIABILIDAD o APTITUD PARA UN PROPÓSITO DETERMINADO. Vea la
# Licencia Pública General de GNU para más detalles.
#
# Deberías haber recibido una copia de la Licencia Pública General
# de GNU junto con este software; mira el fichero LICENSE. Si
# no, mira <https://www.gnu.org/licenses/>.

# Author: Ulpiano Tur de Vargas <ulpiano.tur.devargas@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this software; see the file LICENSE. If
# not, see <https://www.gnu.org/licenses/>.

@include "bbl_jdva.awk";
@include "bbl_pruebas.awk";

BEGIN {
    dfdl = "../log/";
    dejm = "../../ejemplos/";
    dtmp = "tmp/prueba_03/";    # Relativa
    dfjs = "../pruebas/djson/"; # Desde carpeta "dejm"

    LOG = dfdl "prueba_03.log";
    fdpj = ARGV[1];

    split(fdpj, n, "/");
    nfpj = n[length(n)];
    split(nfpj, n, ".");
    nfpj = n[1];
    delete n;

    cad_json01[0] = "";
    ruta_fjson_01 = dtmp nfpj "_01.json"; # Relativa
    cad_json02[0] = "";
    ruta_fjson_02 = dtmp nfpj "_02.json"; # Relativa

    plog("Prueba03 ("nfpj"): Iniciando prueba...\n", 1, "INFO");

    system("mkdir -p " dfdl);
    system("mkdir -p ../" dtmp);
    system(                                    \
        "_PWD=$(pwd); cd " dejm ";"            \
        "./pinta_json " dfjs nfpj ".json"      \
        " > ../pruebas/" dtmp nfpj "_01.json;" \
        "cd \"${_PWD}\""                       \
        );

    while ((getline linea < ("../" ruta_fjson_01)) > 0)
        cad_json01[0] = cad_json01[0] linea;
    close(("../" ruta_fjson_01));

    plog("Prueba03 ("nfpj"): Convertir JSON_01 en lista_01... ", 1, "INFO");
    jsonLstm(cad_json01, lista01);
    plog("Hecho.\n");
    
    plog("Prueba03 ("nfpj"): Convertir lista_01 en JSON_02... ", 1, "INFO");
    lstmJson(lista01, cad_json02);
    plog("Hecho.\n");

    print cad_json02[0] > "../" ruta_fjson_02 ".ssg";
    system(                                             \
        "_PWD=$(pwd); cd " dejm ";"                     \
        "./pinta_json ../pruebas/" ruta_fjson_02 ".ssg" \
        " > ../pruebas/" ruta_fjson_02 ";"              \
        "cd \"${_PWD}\""                                \
        );

    plog("Prueba03 ("nfpj"): Comparar JSON_01 y 02... ", 1, "INFO");
    codSal = system(                           \
        "diff "                                \
        "../" ruta_fjson_01 " "                \
        "../" ruta_fjson_02 " > /dev/null"     \
        );
    plog("Hecho.\n");

    if (codSal == 0) {
        plog("Prueba03 ("nfpj"): Prueba superada.\n", 1, "INFO");
    } else {
        plog("Prueba03 ("nfpj"): Texto JSON 01 y 02 difieren.\n",
                1, "ERROR");
        exit 1;
    }

    exit 0;
}
